<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>net6.0</TargetFramework>
    <ImplicitUsings>enable</ImplicitUsings>
    <Nullable>enable</Nullable>

    <IsPackable>false</IsPackable>
    <IsTestProject>true</IsTestProject>
  </PropertyGroup>

  <ItemGroup>
    <None Remove="docker-compose-mongo.yml" />
    <None Remove="docker-compose-raven.yml" />
  </ItemGroup>

  <ItemGroup>
    <Content Include="docker-compose-mongo.yml">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </Content>
    <Content Include="docker-compose-raven.yml">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </Content>
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="DockerComposeFixture" Version="1.1.0" />
    <PackageReference Include="Microsoft.Extensions.Hosting" Version="7.0.1" />
    <PackageReference Include="Microsoft.Extensions.Logging" Version="7.0.0" />
    <PackageReference Include="Microsoft.NET.Test.Sdk" Version="17.5.0" />
    <PackageReference Include="xunit" Version="2.4.2" />
    <PackageReference Include="Xunit.DependencyInjection.Logging" Version="8.0.1" />
    <PackageReference Include="xunit.runner.visualstudio" Version="2.4.5">
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
      <PrivateAssets>all</PrivateAssets>
    </PackageReference>
    <PackageReference Include="coverlet.collector" Version="3.2.0">
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
      <PrivateAssets>all</PrivateAssets>
    </PackageReference>
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\..\..\src\Services\DoctorDay.Infrastructure.MongoDB\DoctorDay.Infrastructure.MongoDB.csproj" />
    <ProjectReference Include="..\..\..\src\Services\DoctorDay.Infrastructure.RavenDB\DoctorDay.Infrastructure.RavenDB.csproj" />
    <ProjectReference Include="..\..\Eventuous.TestHelpers\Eventuous.TestHelpers.csproj" />
  </ItemGroup>

</Project>
