version: '3.4'

services:
  eventstore.db:
    image: eventstore/eventstore
    container_name: eventstore.db
    hostname: eventstore.db
    environment:
      - EVENTSTORE_CLUSTER_SIZE=1
      - EVENTSTORE_RUN_PROJECTIONS=All
      - EVENTSTORE_START_STANDARD_PROJECTIONS=true
      - EVENTSTORE_EXT_TCP_PORT=1113
      #- EVENTSTORE_EXT_HTTP_PORT=2113
      - EVENTSTORE_INSECURE=true
      - EVENTSTORE_ENABLE_EXTERNAL_TCP=true
      - EVENTSTORE_ENABLE_ATOM_PUB_OVER_HTTP=true
    ports:
      - "1113:1113"
      - "2113:2113"
    volumes:
      - type: volume
        source: eventstore-volume-data
        target: /var/lib/eventstore
      - type: volume
        source: eventstore-volume-logs
        target: /var/log/eventstore

  raven.db:
    image: ravendb/ravendb
    container_name: raven.db
    hostname: raven.db
    environment:
      - RAVEN_ARGS='--Setup.Mode=None'
      - RAVEN_Security_UnsecuredAccessAllowed='PrivateNetwork'
    ports:
      - "8080:8080"
    volumes:
      - type: volume
        source: ravendb-volume-config
        target: /opt/RavenDB/config
      - type: volume
        source: ravendb-volume-data
        target: /opt/RavenDB/Server/RavenData

  azurite:
    image: mcr.microsoft.com/azure-storage/azurite
    container_name: "azurite"
    hostname: azurite
    restart: always
    ports:
      - "10000:10000"
      - "10001:10001"
      - "10002:10002"

  doctorday.api:
    image: ${DOCKER_REGISTRY-}doctorday.api
    build:
      context: .
      dockerfile: src/Services/DoctorDay.API/Dockerfile
    depends_on:
      - eventstore.db
      - raven.db

  doctorday.subscriptions.catchup.ravendb:
    image: ${DOCKER_REGISTRY-}doctorday.subscriptions.catchup.ravendb
    build:
      context: .
      dockerfile: src/Services/DoctorDay.Subscriptions.Catchup.RavenDB/Dockerfile
    depends_on:
      - eventstore.db
      - raven.db
      - azurite

  doctorday.subscriptions.persistent.eventstoredb:
    image: ${DOCKER_REGISTRY-}doctorday.subscriptions.persistent.eventstoredb
    build:
      context: .
      dockerfile: src/Services/DoctorDay.Subscriptions.Persistent.EventStoreDB/Dockerfile
    depends_on:
      - eventstore.db

volumes:
  eventstore-volume-data:
  eventstore-volume-logs:
  ravendb-volume-config:
  ravendb-volume-data:

